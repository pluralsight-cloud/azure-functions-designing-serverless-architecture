{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "12997294957585950357"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "appServicePlanName": "[format('asp{0}', uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('func{0}', uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[format('app{0}', uniqueString(resourceGroup().id))]",
    "cosmosAccountName": "[format('cosmos{0}', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[variables('location')]",
      "tags": {
        "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('functionAppName')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web"
      },
      "kind": "web"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[variables('location')]",
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOTNET|8.0",
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-07-01-preview",
      "name": "[variables('cosmosAccountName')]",
      "location": "[variables('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "createMode": "Default",
        "databaseAccountOfferType": "Standard",
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "locations": [
          {
            "locationName": "[variables('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-07-01-preview",
      "name": "[format('{0}/sales', variables('cosmosAccountName'))]",
      "properties": {
        "resource": {
          "id": "sales"
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-07-01-preview",
      "name": "[format('{0}/items', format('{0}/sales', variables('cosmosAccountName')))]",
      "properties": {
        "resource": {
          "id": "items",
          "partitionKey": {
            "paths": [
              "/PartitionKey"
            ],
            "kind": "Hash"
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/sales', variables('cosmosAccountName')), '/')[0], split(format('{0}/sales', variables('cosmosAccountName')), '/')[1])]"
      ]
    }
  ]
}